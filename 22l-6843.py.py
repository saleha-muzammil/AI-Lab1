# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wmUg2LymPYMVBkDwRkWHlcWhuq7AbrAU
"""

#Task1
name=input("Enter Your Name ")
age=input("Enter your age ")
print("Hello Mr ",name)

#Task2
data=int(input("Enter data"))
print(type(data))

#Task3
fruits = ['apple', 'banana', 'cherry']

print(fruits)

fruits.append("Mango")
print(fruits)
fruits.remove("apple")
print(fruits)

print([phal.upper() for phal in fruits])

#Task4
tuple = (1, 2, 3, 4,6)


first_element, second_element = tuple[0], tuple[1]


print(first_element)
print(second_element)



#Task5
student_grades = {}


for i in range(5):
    name = input(f"Enter the name of student {i + 1}: ")
    grade = input(f"Enter the grade for {name}: ")
    student_grades[name] = grade

print("Student Grades Dictionary:")
print(student_grades)

#Task6
    list1 = input("Enter the first list of integers (comma-separated): ")

    set1 = set(map(int, list1.split(',')))


    list2 = input("Enter the second list of integers (comma-separated): ")

    set2 = set(map(int, list2.split(',')))


    union = set1.union(set2)
    intersection = set1.intersection(set2)
    difference = set1.difference(set2)


    print("Set 1:", set1)
    print("Set 2:", set2)
    print("Union:", union)
    print("Intersection:", intersection)
    print("Difference (Set 1 - Set 2):", difference)

#Task7
num = int(input("Enter an integer: "))


if num > 0:
    print("The number is positive.")
elif num < 0:
    print("The number is negative.")
else:
    print("The number is zero.")


if num % 2 == 0:
    print("The number is even.")
else:
    print("The number is odd.")

#Task8

for i in range(1,50):
    if i % 3 == 0 and i % 5 == 0:
        print("FizzBuzz")
    elif i % 3 == 0:
        print("Fizz")
    elif i % 5 == 0:
        print("Buzz")
    else:
      print(i)

#Task9
def factorial(n):

    if n < 0:
        return "Factorial is not defined for negative numbers."

    result = 1
    for i in range(1, n + 1):
        result *= i

    return result


number = int(input("Enter a non-negative integer: "))
print(f"The factorial of {number} is: {factorial(number)}")

#Task 10
def is_prime(n):

    if n < 2:
        return False

    for i in range(2, n-1):
        if n % i == 0:
            return False
    return True


number = int(input("Enter a positive integer: "))
if is_prime(number):
    print(f"{number} is a prime number.")
else:
    print(f"{number} is not a prime number.")

#task 11


def square_numbers(numbers):

    return [x**2 for x in numbers]


input_list = [1, 2, 3, 4, 5]
squared_list = square_numbers(input_list)
print(f"The squares of {input_list} are: {squared_list}")

#Task 12

def merge_dicts(dict1, dict2):

    merged_dict = dict1.copy()
    merged_dict.update(dict2)
    return merged_dict


dict_a = {'a': 1, 'b': 2}
dict_b = {'b': 3, 'c': 4}
merged = merge_dicts(dict_a, dict_b)
print(merged)

#Task 13
def remove_duplicates(input_list):
    seen = set()
    result = []
    for number in input_list:
        if number not in seen:
            seen.add(number)
            result.append(number)

    return result


numbers = [1, 2, 3, 2, 4, 1, 5]
unique_numbers = remove_duplicates(numbers)
print(f"The list after removing duplicates: {unique_numbers}")

#TASK 14

def is_palindrome(s):

    normalized = ''.join(s.split()).lower()

    check_palindrome = lambda x: x == x[::-1]
    return check_palindrome(normalized)


input_string = "0110"
if is_palindrome(input_string):
    print(f'"{input_string}" is a palindrome.')
else:
    print(f'"{input_string}" is not a palindrome.')

#TASK 15
def generate_fibonacci(n):

    fib_sequence = []

    a, b = 0, 1
    for _ in range(n):
        fib_sequence.append(a)
        a, b = b, a + b

    return fib_sequence


n = int(input("Enter the number of Fibonacci numbers to generate: "))
fibonacci_numbers = generate_fibonacci(n)
print(f"The first {n} numbers in the Fibonacci sequence are: {fibonacci_numbers}")

#Task 16
def calculate_average():
    numbers = []

    while True:
        user_input = input("Enter a number (or type '-1' to finish): ")

        if user_input.lower() == '-1':
            break

        try:
            number = float(user_input)
            numbers.append(number)
        except ValueError:
            print("Invalid input. Please enter a valid number.")

    if numbers:
        average = sum(numbers) / len(numbers)
        print(f"The average of the entered numbers is: {average:.2f}")
    else:
        print("No numbers were entered.")

calculate_average()

#Task 17
def multiplication_table():

    for i in range(1, 11):

        for j in range(1, 11):

            print(f"{i} x {j} = {i * j}", end="\t")
        print()


multiplication_table()

#task 18
def user_registration_system():
    users = {}

    while True:
        action = input("Would you like to register or login? (register/login/exit): ").lower()

        if action == 'register':
            username = input("Enter a username: ")
            password = input("Enter a password: ")

            if username in users:
                print("Username already exists. Please choose a different username.")
            else:
                users[username] = password
                print("Registration successful!")

        elif action == 'login':
            username = input("Enter your username: ")
            password = input("Enter your password: ")

            if username in users and users[username] == password:
                print("Login successful! Welcome, " + username + "!")
            else:
                print("Invalid username or password.")

        elif action == 'exit':
            print("Exiting the system. Goodbye!")
            break

        else:
            print("Invalid action. Please choose 'register', 'login', or 'exit'.")

user_registration_system()

#task 19
def word_frequency_counter():

    words_input = input("Enter a list of words separated by spaces: ")


    words = words_input.split()


    frequency = {}

    for word in words:
        word = word.lower()
        if word in frequency:
            frequency[word] += 1
        else:
            frequency[word] = 1


    print("\nWord Frequencies:")
    for word, count in frequency.items():
        print(f"{word}: {count}")

word_frequency_counter()

def convert_temperature():

    choice = input("Would you like to convert from Celsius to Fahrenheit (C) or Fahrenheit to Celsius (F)? ").strip().upper()

    if choice not in ['C', 'F']:
        print("Invalid choice. Please enter 'C' for Celsius to Fahrenheit or 'F' for Fahrenheit to Celsius.")
        return


    temperature = float(input("Enter the temperature value: "))

    if choice == 'C':

        converted_temp = (temperature * 9/5) + 32
        print(f"{temperature}째C is equal to {converted_temp:.2f}째F")
    else:

        converted_temp = (temperature - 32) * 5/9
        print(f"{temperature}째F is equal to {converted_temp:.2f}째C")

convert_temperature()